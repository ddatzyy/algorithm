struct rolling_hash_strings {
    rolling_hash_strings(int _N) : N(_N)  // N : maximum length of string
    {
        mul = 0, div = 0;
        while (mul == div) {
            mul = prime_list[hash_string_random(hash_string_seed)] + uint64_t(1e9);
            div = prime_list[hash_string_random(hash_string_seed)] + uint64_t(1e9);
        }
        uint64_t _m = mul, _d = div - 2;
        imul = 1;
        while (_d > 0) {
            if (_d & 1) imul = imul * _m % div;
            _m = _m * _m % div, _d /= 2;
        }
        pm.push_back(1), pim.push_back(1);
        for (int i = 1; i <= N; i++)
            pm.push_back(pm.back() * mul % div), pim.push_back(pim.back() * imul % div);
    }
    // 1-based index
    template <typename T>
    void push(initializer_list<T> arr)
    {
        hs.emplace_back();
        auto& nhs = hs.back();
        nhs.push_back(0);
        for (const auto& ne : arr)
            nhs.push_back((nhs.back() + ne * pm[nhs.size() - 1] % div) % div);
    }
    // 1-based index
    template <typename T>
    void push(T& arr, typename enable_if<!is_arithmetic<T>::value, void*>::type = nullptr)
    {
        hs.emplace_back();
        auto& nhs = hs.back();
        nhs.push_back(0);
        for (const auto& ne : arr)
            nhs.push_back((nhs.back() + ne * pm[nhs.size() - 1] % div) % div);
    }
    void push(int id, uint64_t va)
    {
        hs[id].push_back((hs[id].back() + va * pm[hs[id].size()] % div) % div);
    }
    void pop(int id)
    {
        if (hs[id].size() > 1) hs[id].pop_back();
    }

    uint64_t substr(int id, int st, int en)
    {  // return ^0 ^1 ... ^(en - st)
        assert(st > 0 && en >= st);
        return (hs[id][en] + div - hs[id][st - 1]) % div * pim[st - 1] % div;
    }

    bool compare(int id1, int st1, int en1, int id2, int st2, int en2)
    {
        return (en1 - st1 == en2 - st2) && (substr(id1, st1, en1) == substr(id2, st2, en2));
    }

    int N;
    uint64_t mul, div, imul;
    vector<vector<uint64_t>> hs;  // hs : - ^0 ^1 ^2 ... (prefix sum)
    vector<uint64_t> pm, pim;

   private:
    static inline mt19937 hash_string_seed{static_cast<unsigned int>(chrono::steady_clock::now().time_since_epoch().count())};
    static inline uniform_int_distribution<uint64_t> hash_string_random{static_cast<uint16_t>(0), static_cast<uint16_t>(999)};
    static constexpr array<uint64_t, 1000>
        prime_list =
            {7, 9, 21, 33, 87, 93, 97, 103, 123, 181, 207, 223, 241, 271, 289, 297, 321, 349, 363, 403, 409, 411, 427, 433, 439, 447, 453, 459, 483, 513, 531, 579, 607, 613, 637, 663, 711, 753, 787, 801, 829, 861, 871, 891, 901, 919, 931, 933, 993, 1011, 1021, 1053, 1087, 1099, 1137, 1161, 1203, 1213, 1237, 1263, 1269, 1273, 1279, 1311, 1329, 1333, 1351, 1371, 1393, 1413, 1447, 1449, 1491, 1501, 1531, 1537, 1539, 1581, 1617, 1621, 1633, 1647, 1663, 1677, 1699, 1759, 1773, 1789, 1791, 1801, 1803, 1819, 1857, 1887, 1917, 1927, 1957, 1963, 1969, 2043,
             2089, 2103, 2139, 2149, 2161, 2173, 2187, 2193, 2233, 2239, 2277, 2307, 2359, 2361, 2431, 2449, 2457, 2499, 2571, 2581, 2607, 2631, 2637, 2649, 2667, 2727, 2791, 2803, 2821, 2823, 2827, 2907, 2937, 2989, 3009, 3013, 3051, 3057, 3097, 3111, 3133, 3153, 3157, 3163, 3211, 3241, 3247, 3253, 3267, 3271, 3273, 3283, 3309, 3337, 3351, 3357, 3373, 3379, 3397, 3469, 3471, 3513, 3519, 3559, 3577, 3579, 3601, 3621, 3643, 3651, 3663, 3679, 3709, 3747, 3751, 3769, 3777, 3787, 3793, 3843, 3853, 3871, 3889, 3891, 3909, 3919, 3931, 3951, 3957, 3967, 3987, 3999, 4023, 4059, 4099, 4119, 4123, 4207, 4233, 4249,
             4251, 4263, 4321, 4329, 4381, 4389, 4437, 4449, 4459, 4497, 4507, 4519, 4539, 4567, 4569, 4581, 4609, 4611, 4627, 4633, 4647, 4693, 4699, 4717, 4771, 4777, 4783, 4791, 4807, 4839, 4843, 4849, 4857, 4867, 4869, 4891, 4893, 4897, 4927, 4933, 4977, 4981, 5001, 5029, 5053, 5067, 5103, 5133, 5187, 5197, 5203, 5233, 5277, 5287, 5299, 5317, 5329, 5341, 5353, 5361, 5403, 5407, 5437, 5443, 5449, 5451, 5469, 5491, 5527, 5541, 5547, 5583, 5631, 5647, 5683, 5731, 5737, 5751, 5763, 5791, 5823, 5827, 5833, 5847, 5863, 5899, 5907, 5947, 5953, 5959, 5971, 5973, 5991, 5997, 6019, 6027, 6037, 6039, 6061, 6093,
             6099, 6127, 6129, 6177, 6193, 6211, 6223, 6229, 6307, 6313, 6331, 6349, 6379, 6393, 6417, 6421, 6457, 6459, 6477, 6541, 6571, 6577, 6583, 6607, 6621, 6661, 6663, 6697, 6717, 6751, 6781, 6837, 6867, 6901, 6957, 6961, 6967, 6981, 7003, 7023, 7027, 7089, 7117, 7137, 7147, 7159, 7191, 7209, 7237, 7243, 7257, 7279, 7321, 7347, 7383, 7389, 7417, 7429, 7447, 7453, 7467, 7479, 7497, 7513, 7521, 7531, 7537, 7557, 7633, 7647, 7651, 7653, 7681, 7707, 7719, 7741, 7759, 7773, 7803, 7819, 7837, 7873, 7887, 7909, 7923, 7927, 7929, 7941, 8041, 8083, 8089, 8101, 8109, 8127, 8173, 8181, 8223, 8257, 8259, 8271,
             8277, 8311, 8313, 8343, 8349, 8397, 8403, 8419, 8431, 8439, 8487, 8511, 8557, 8593, 8617, 8637, 8649, 8661, 8671, 8679, 8719, 8727, 8761, 8773, 8791, 8797, 8803, 8811, 8829, 8853, 8899, 8917, 8937, 8967, 9009, 9013, 9063, 9081, 9093, 9099, 9123, 9133, 9163, 9183, 9211, 9223, 9259, 9277, 9279, 9289, 9301, 9321, 9331, 9363, 9399, 9403, 9421, 9441, 9457, 9469, 9487, 9519, 9529, 9531, 9541, 9559, 9561, 9567, 9573, 9579, 9597, 9601, 9609, 9631, 9651, 9667, 9679, 9711, 9733, 9739, 9757, 9789, 9831, 9859, 9867, 9961, 9999, 10029, 10051, 10069, 10101, 10153, 10173, 10189, 10197, 10233, 10243, 10251, 10267, 10281,
             10303, 10321, 10327, 10351, 10357, 10381, 10449, 10467, 10483, 10503, 10513, 10549, 10593, 10597, 10611, 10633, 10659, 10699, 10707, 10723, 10747, 10749, 10761, 10773, 10777, 10801, 10833, 10903, 10953, 10969, 10971, 10981, 10987, 11007, 11011, 11071, 11083, 11091, 11107, 11109, 11137, 11149, 11161, 11223, 11239, 11253, 11269, 11277, 11283, 11289, 11301, 11317, 11329, 11371, 11377, 11391, 11421, 11479, 11487, 11497, 11517, 11533, 11539, 11559, 11583, 11601, 11619, 11631, 11659, 11673, 11679, 11707, 11763, 11767, 11769, 11773, 11799, 11811, 11821, 11823, 11847, 11869, 11967, 11983, 11989, 12019, 12037, 12121, 12157, 12177, 12187, 12217, 12219, 12231, 12241, 12253, 12297, 12309, 12333, 12337,
             12339, 12361, 12367, 12399, 12411, 12459, 12463, 12483, 12501, 12513, 12523, 12547, 12553, 12577, 12609, 12631, 12649, 12679, 12681, 12703, 12723, 12733, 12747, 12753, 12759, 12799, 12847, 12877, 12891, 12901, 12903, 12927, 12939, 12963, 13011, 13017, 13029, 13039, 13081, 13087, 13089, 13101, 13107, 13137, 13141, 13143, 13153, 13191, 13207, 13213, 13237, 13323, 13369, 13419, 13437, 13447, 13477, 13519, 13537, 13561, 13563, 13587, 13591, 13723, 13741, 13759, 13789, 13801, 13857, 13881, 13897, 13921, 13923, 13939, 13999, 14011, 14073, 14077, 14083, 14097, 14121, 14131, 14143, 14157, 14161, 14167, 14181, 14193, 14209, 14241, 14259, 14271, 14293, 14361, 14391, 14397, 14437, 14529, 14551, 14581,
             14583, 14599, 14607, 14611, 14643, 14727, 14761, 14773, 14779, 14791, 14823, 14853, 14881, 14889, 14901, 14931, 14937, 14997, 15031, 15043, 15057, 15063, 15069, 15097, 15103, 15109, 15117, 15141, 15147, 15187, 15199, 15217, 15231, 15253, 15271, 15279, 15283, 15307, 15339, 15349, 15351, 15363, 15369, 15409, 15427, 15447, 15477, 15487, 15553, 15579, 15591, 15649, 15651, 15673, 15693, 15703, 15717, 15727, 15747, 15799, 15811, 15823, 15859, 15889, 15963, 15981, 16009, 16021, 16029, 16047, 16063, 16089, 16093, 16107, 16153, 16167, 16191, 16201, 16231, 16233, 16261, 16267, 16273, 16317, 16323, 16411, 16419, 16431, 16489, 16491, 16513, 16539, 16617, 16621, 16623, 16627, 16651, 16659, 16671, 16711,
             16863, 16887, 16909, 16929, 16939, 17047, 17071, 17077, 17089, 17097, 17107, 17119, 17131, 17157, 17169, 17199, 17203, 17223, 17229, 17247, 17257, 17259, 17287, 17289, 17301, 17307, 17311, 17349, 17379, 17413, 17433, 17493, 17541, 17559, 17563, 17607, 17631, 17659, 17737, 17751, 17769, 17773, 17793, 17797, 17829, 17841, 17853, 17869, 17881, 17923, 17929, 17959, 17961, 18001, 18007, 18067, 18073, 18087, 18093, 18141, 18147, 18169, 18171, 18189, 18321, 18333, 18337, 18361, 18373, 18379, 18381, 18391, 18427, 18433, 18441, 18471, 18477, 18519, 18531, 18543, 18549, 18601, 18603, 18619, 18627, 18651, 18709, 18711, 18753, 18757, 18813, 18819, 18841, 18847, 18871, 18913, 18927, 18939, 18967, 18969,
             19003, 19057, 19071, 19081, 19089, 19099, 19107, 19113, 19117, 19123, 19131, 19159, 19161, 19227, 19249, 19257, 19327, 19333, 19351, 19353, 19357, 19393, 19399, 19401, 19429, 19443, 19459, 19467, 19491, 19563, 19569, 19591, 19597, 19617, 19621, 19659, 19677, 19681, 19693, 19707, 19711, 19719, 19743, 19767, 19777, 19791, 19803, 19819, 19857, 19861, 19863, 19869, 19873, 19897, 19899, 19903, 19927, 19981, 20001, 20011, 20023, 20029, 20107, 20139, 20163, 20193, 20209, 20221, 20283, 20313, 20319, 20337, 20347, 20353, 20361, 20367, 20383, 20409, 20443, 20491, 20523, 20547, 20569, 20577, 20689, 20701, 20727, 20737, 20743, 20757, 20779, 20799, 20803, 20817, 20829, 20851, 20881, 20893, 20919, 20929};
};